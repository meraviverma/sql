Syntax: 
SELECT [column,] group_function(column)... 
FROM table 
[WHERE condition] 
[GROUP BY [CUBE | ROLLUP] [group_by_expression] 
[HAVING having_expression] 
[ORDER BY column];

Note :
 Only grouped columns allowed in the group by clause
 Whenever we are using a group function in the SQL statement, we have to use group by clause.

To display the DEPTNO only one time (output with breaks)

INPUT:
SQL> BREAK ON DEPTNO SKIP 1
SQL> SELECT deptno,job,COUNT(*) FROM emp GROUP BY deptno,job;

OUTPUT:
DEPTNO 		JOB 		COUNT(*)
---------- --------- 	----------
10 		CLERK 		1
		MANAGER 	1
		PRESIDENT 	1
20 		CLERK 		2
		ANALYST 	2
		MANAGER 	1
30 		CLERK 		1
		MANAGER 	1
		SALESMAN 	4

ANALYSIS:
Break is Environment command , which breaks the information on repetitive column and displays them only once.
SKIP 1 used with BREAK to leave one blank line after completion of each
Deptno.

SQL> CLEAR BREAK;

POINTS TO REMEMBER 
WHERE clause can be used to check for conditions based on values of columns and expressions but not the result of GROUP functions.
HAVING clause is specially designed to evaluate the conditions that are based on group functions such as SUM, COUNT etc.
HAVING clause can be used only when GROUP BY clause is used.

ORDER OF EXECUTION
Here are the rules ORCALE uses to execute different clauses given in SELECT command
 Selects rows based on Where clause
 Groups rows based on GROUP BY clause
 Calculates results for each group
 Eliminate groups based on HAVING clause
 Then ORDER BY is used to order the results

Example:

SELECT job,SUM(sal) FROM emp WHERE job != „CLERK‟
GROUP BY job HAVING SUM(sal) > 5000 ORDER BY job DESC;

SELECT sal FROM emp GROUP BY sal HAVING COUNT(sal) > 1;

SELECT job,COUNT(*) FROM emp GROUP BY job HAVING COUNT(*) BETWEEN 3 AND 5;

SELECT job,SUM(sal) FROM emp GROUP BY job HAVING SUM(sal) > 5000;

SELECT job,SUM(sal) FROM emp WHERE SUM(sal) > 5000 GROUP BY job;

SELECT job,SUM(sal) FROM emp GROUP BY job;

SELECT deptno,job,COUNT(*) FROM emp GROUP BY ROLLUP(deptno,job)
SELECT deptno,job,COUNT(*) FROM emp GROUP BY CUBE(deptno,job);
